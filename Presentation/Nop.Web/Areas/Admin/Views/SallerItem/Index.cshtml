@model Nop.Web.Areas.Admin.Models.SallerItem.SallerItemSearchModel
@inject Nop.Services.Saller.ISallerService sallerItemService
@using Nop.Web.Framework.Models.AdminAreaTour

@{
    //page title
    ViewBag.PageTitle = T("Admin.SallerItem").Text;
    //tour step
    ViewBag.TourStep = TourStep.TopicList;
    //active menu item (system name)
    Html.SetActiveMenuItemSystemName("Topics");

    string editQueryString = string.Empty;
    var showTour = ViewBag.ShowTour ?? false;
    if (showTour)
    {
        editQueryString = "?showtour=true";
    }

    //const string hideSearchBlockAttributeName = "TopicsPage.HideSearchBlock";
    //var hideSearchBlock = await genericAttributeService.GetAttributeAsync<bool>(await workContext.GetCurrentCustomerAsync(), hideSearchBlockAttributeName);
}

@await Html.PartialAsync("_AdminTour")

<div class="content-header clearfix">
    <h1 class="float-left">
        @T("Admin.SallerItem")
    </h1>
    <div class="float-right">
        <a asp-action="Create" class="btn btn-primary">
            <i class="fas fa-plus-square"></i>
            @T("Admin.Common.AddNew")
        </a>
        @await Component.InvokeAsync("AdminWidget", new { widgetZone = AdminWidgetZones.TopicListButtons })
    </div>
</div>

<section class="content">
    <div class="container-fluid">
        <div class="form-horizontal">
            <div class="cards-group">
                <div class="card card-default card-search">
                    <div class="card-body">
                        @*<div class="row search-row @(!hideSearchBlock ? "opened" : "")" data-hideAttribute="@hideSearchBlockAttributeName">
                            <div class="search-text">@T("Admin.Common.Search")</div>
                            <div class="icon-search"><i class="fas fa-search" aria-hidden="true"></i></div>
                            <div class="icon-collapse"><i class="far fa-angle-@(!hideSearchBlock ? "up" : "down")" aria-hidden="true"></i></div>
                        </div>*@

                        <div class="search-body @*@(hideSearchBlock ? "closed" : "")*@">
                            <div class="row">
                                <div class="col-md-6">
                                    <div class="form-group row" @(Model.HideStoresList ? Html.Raw("style=\"display:none\"") : null)>
                                        <div class="col-md-4">
                                            <nop-label asp-for="SearchStoreId" />
                                        </div>
                                        <div class="col-md-8">
                                            <nop-select asp-for="SearchStoreId" asp-items="Model.AvailableStores" />
                                        </div>
                                    </div>
                                    <div class="form-group row">
                                        <div class="col-md-4">
                                            <nop-label asp-for="SearchKeywords" />
                                        </div>
                                        <div class="col-md-8">
                                            <nop-editor asp-for="SearchKeywords" />
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <div class="row">
                                <div class="col-md-8 offset-md-4">
                                    <button type="button" id="search-topics" class="btn btn-primary btn-search">
                                        <i class="fas fa-search"></i>
                                        @T("Admin.Common.Search")
                                    </button>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>

                <div class="card card-default">
                    <div class="card-body" id="topics-area">
                        <nop-doc-reference asp-string-resource="@T("Admin.Documentation.Reference.SallerItem", Docs.Products + Utm.OnAdmin)" />

                        @await Html.PartialAsync("Table", new DataTablesModel
                   {
                       Name = "saller-item-grid",
                       RowIdBasedOnField = nameof(Nop.Web.Areas.Admin.Models.SallerItem.SallerItemModel.Name),
                       UrlRead = new DataUrl("List", "SallerItem", null),
                       SearchButtonId = "search-topics",
                       Length = Model.PageSize,
                       LengthMenu = Model.AvailablePageSizes,
                       Filters = new List<FilterParameter>
                       {
                           Capacity = 1
                       },
                       ColumnCollection = new List<ColumnProperty>
                        {
                           new ColumnProperty(nameof(Nop.Web.Areas.Admin.Models.SallerItem.SallerItemModel.Id))
                            {
                                Title = T("Admin.SallerItem.Fields.Id").Text
                            },
                            new ColumnProperty(nameof(Nop.Web.Areas.Admin.Models.SallerItem.SallerItemModel.ProductName))
                            {
                                Title = T("Admin.SallerItem.Fields.ProductName").Text
                            },
                            new ColumnProperty(nameof(Nop.Web.Areas.Admin.Models.SallerItem.SallerItemModel.ProductPrice))
                            {
                                Title = T("Admin.SallerItem.Fields.ProductPrice").Text
                            },
                            new ColumnProperty(nameof(Nop.Web.Areas.Admin.Models.SallerItem.SallerItemModel.ProductDescription))
                            {
                                Title = T("Admin.SallerItem.Fields.ProductDescription").Text
                            },
                            new ColumnProperty(nameof(Nop.Web.Areas.Admin.Models.SallerItem.SallerItemModel.ProductStatus))
                            {
                                Title = T("Admin.SallerItem.Fields.ProductStatus").Text
                            },
                            new ColumnProperty(nameof(Nop.Web.Areas.Admin.Models.SallerItem.SallerItemModel.ImageString))
                            {
                                Title = T("Admin.SallerItem.Fields.ImageString").Text
                            }
                            
                        }
                   })
                    </div>
                </div>
            </div>
        </div>
    </div>
</section>

<script>
    function renderColumnEdit(data, type, row, meta) {
        return '<a href="@Url.Content("~/Admin/Topic/Edit/")' + data + '@(editQueryString)" class="btn btn-default"><i class="fas fa-pencil-alt"></i>@T("Admin.Common.Edit").Text</a>';
    }
</script>