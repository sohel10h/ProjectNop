@model ContactSearchModel
@inject Nop.Services.Contacts.IContactService contactService
@using Nop.Web.Framework.Models.AdminAreaTour
@using Nop.Web.Areas.Admin.Models.Contact

@{
    //page title
    ViewBag.PageTitle = T("Admin.Contract.appoinments").Text;
    //tour step
    ViewBag.TourStep = TourStep.TopicList;
    //active menu item (system name)
    Html.SetActiveMenuItemSystemName("Contract appoinments");

    string editQueryString = string.Empty;
    var showTour = ViewBag.ShowTour ?? false;
    if (showTour)
    {
        editQueryString = "?showtour=true";
    }

    const string hideSearchBlockAttributeName = "TopicsPage.HideSearchBlock";
    var hideSearchBlock = await genericAttributeService.GetAttributeAsync<bool>(await workContext.GetCurrentCustomerAsync(), hideSearchBlockAttributeName);
}

@await Html.PartialAsync("_AdminTour")

<div class="content-header clearfix">
    <h1 class="float-left">
        @T("Admin.Contract.complaints")
    </h1>

</div>

<section class="content">
    <div class="container-fluid">
        <div class="form-horizontal">
            <div class="cards-group">
                @*<div class="card card-default card-search">
                    <div class="card-body">
                        <div class="row search-row @(!hideSearchBlock ? "opened" : "")" data-hideAttribute="@hideSearchBlockAttributeName">
                            <div class="search-text">@T("Admin.Common.Search")</div>
                            <div class="icon-search"><i class="fas fa-search" aria-hidden="true"></i></div>
                            <div class="icon-collapse"><i class="far fa-angle-@(!hideSearchBlock ? "up" : "down")" aria-hidden="true"></i></div>
                        </div>

                        <div class="search-body @(hideSearchBlock ? "closed" : "")">
                            <div class="row">
                                <div class="col-md-6">
                                    <div class="form-group row" @(Model.HideStoresList ? Html.Raw("style=\"display:none\"") : null)>
                                        <div class="col-md-4">
                                            <nop-label asp-for="SearchStoreId" />
                                        </div>
                                        <div class="col-md-8">
                                            <nop-select asp-for="SearchStoreId" asp-items="Model.AvailableStores" />
                                        </div>
                                    </div>
                                    <div class="form-group row">
                                        <div class="col-md-4">
                                            <nop-label asp-for="SearchKeywords" />
                                        </div>
                                        <div class="col-md-8">
                                            <nop-editor asp-for="SearchKeywords" />
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <div class="row">
                                <div class="col-md-8 offset-md-4">
                                    <button type="button" id="search-topics" class="btn btn-primary btn-search">
                                        <i class="fas fa-search"></i>
                                        @T("Admin.Common.Search")
                                    </button>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>*@

                <div class="card card-default">
                    <div class="card-body" id="topics-area">
                    @*<nop-doc-reference asp-string-resource="@T("Admin.Documentation.Reference.TopicsPages", Docs.TopicsPages + Utm.OnAdmin)" />*@

                    @await Html.PartialAsync("Table", new DataTablesModel
                    {
                        Name = "contact-grid",
                        RowIdBasedOnField = nameof(ContactModel.Id),
                        UrlRead = new DataUrl("Appoinments", "Contract", null),
                        SearchButtonId = "search-topics",
                        Length = Model.PageSize,
                        LengthMenu = Model.AvailablePageSizes,
                        Filters = new List<FilterParameter>
                        {
                            new FilterParameter(nameof(Model.SearchKeywords)),
                            new FilterParameter(nameof(Model.SearchStoreId))
                        },
                        ColumnCollection = new List<ColumnProperty>
                        {
                            new ColumnProperty(nameof(ContactModel.Name))
                            {
                                Title = T("Admin.Contact.Fields.Name").Text,
                                Width = "200",
                            },
                            new ColumnProperty(nameof(ContactModel.Phone))
                            {
                                Title = T("Admin.Contact.Fields.Phone").Text,
                                Width = "100",
                            },
                            new ColumnProperty(nameof(ContactModel.Email))
                            {
                                Title = T("Admin.Contact.Fields.Email").Text,
                                Width = "100",
                            },
                            new ColumnProperty(nameof(ContactModel.VisitDate))
                            {
                                Title = T("Admin.Contact.Fields.VisitDate").Text,
                                Width = "400",
                                Render = new RenderDate()
                            },
                            new ColumnProperty(nameof(ContactModel.Address))
                            {
                                Title = T("Admin.Contact.Fields.Address").Text,
                                Width = "200",

                            },
                            new ColumnProperty(nameof(ContactModel.Message))
                            {
                                Title = T("Admin.Contact.Fields.Message").Text,
                                Width = "400",

                            },
                            new ColumnProperty(nameof(ContactModel.CreatedOnUtc))
                            {
                                Title = T("Admin.Contact.Fields.CreatedOnUtc").Text,
                                Width = "400",
                                Render = new RenderDate()
                            }

                        }
                    })
                </div>
                </div>
            </div>
        </div>
    </div>
</section>

<script>
    function renderColumnEdit(data, type, row, meta) {
        return '<a href="@Url.Content("~/Admin/Topic/Edit/")' + data + '@(editQueryString)" class="btn btn-default"><i class="fas fa-pencil-alt"></i>@T("Admin.Common.Edit").Text</a>';
    }
</script>

<style>


    th, td {
        min-width: 200px;
    }


</style>